name: Deploy Crawler
run-name: Deploy Resource ${{ github.event.inputs.function }} ${{ github.event.inputs.action }} by ${{ github.actor }}

on:
    workflow_dispatch:
        inputs:
            enable_resource_deploy:
                description: 'Enable for resource deploy'
                required: true
                type: boolean
                default: true

            action:
                description: 'Infra to deploy'
                required: true
                default: 'plan'
                type: choice
                options:
                    - 'plan'
                    - 'apply'

permissions:
    id-token: write
    contents: read

jobs:
    prepare-deploy-function:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'

            - name: Install dependencies
              run: npm install --production

            - name: Build Lambda Layer
              run: |
                  mkdir -p nodejs
                  cp -r node_modules ./nodejs/
                  ls -la
                  zip -r layer.zip nodejs
                  du -csh layer.zip

            - name: Upload Lambda Layer Artifact
              uses: actions/upload-artifact@v3
              with:
                  name: layer-zip
                  path: layer.zip

            - name: Compile TypeScript
              run: |
                  npm install tsx
                  npx tsc

            - name: Build and Zip Source Code
              run: |
                  ls -la
                  zip -r source.zip dist/

            - name: Upload Source Code Artifact
              uses: actions/upload-artifact@v3
              with:
                  name: source-zip
                  path: source.zip

    deploy-resource:
        needs: prepare-deploy-function
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Download Lambda Layer Artifact
              uses: actions/download-artifact@v3
              with:
                  name: layer-zip
                  path: .

            - name: Download Source Code Artifact
              uses: actions/download-artifact@v3
              with:
                  name: source-zip
                  path: .

            - name: Move zip to terraform folder
              run: |
                  mv layer.zip terraform/crawler/
                  mv source.zip terraform/crawler/

            - name: Setup Terraform
              if: ${{ github.event.inputs.enable_resource_deploy == 'true' }}
              uses: hashicorp/setup-terraform@v2
              with:
                  cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

            - name: OIDC AWS Credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                  aws-region: 'us-west-2'
                  role-to-assume: arn:aws:iam::340258365836:role/oidc-github-actions-dev-role
                  audience: sts.amazonaws.com

            - name: Terraform setup backend-config
              env:
                  WORKSPACE: 'minttown_pf_infra_crawler'
              run: |
                  FILEPATH="${GITHUB_WORKSPACE}/terraform/crawler/terraform.tf"
                  sed -i "s/terraform_workspace_name_here/$WORKSPACE/g" "$FILEPATH"
                  echo "Replaced terraform_workspace_name_here with $WORKSPACE in $FILEPATH"

            - name: Terraform Init
              if: ${{ github.event.inputs.enable_resource_deploy == 'true' }}
              working-directory: terraform/crawler/
              run: terraform init

            - name: Terraform Validate
              if: ${{ github.event.inputs.enable_resource_deploy == 'true' }}
              working-directory: terraform/crawler/
              id: validate
              run: terraform validate -no-color

            - name: Terraform Plan or Apply
              if: ${{ github.event.inputs.enable_resource_deploy == 'true' }}
              env:
                  FREECASH_SESSION_ID: ${{ secrets.FREECASH_SESSION_ID }}
              run: terraform ${{ github.event.inputs.action == 'plan' && 'plan' || 'apply -auto-approve' }} -var="freecash_session_id=${{ secrets.FREECASH_SESSION_ID }}"
              working-directory: terraform/crawler/
